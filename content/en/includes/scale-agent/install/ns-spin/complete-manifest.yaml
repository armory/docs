# Service to expose the grpc connection that the clouddriver plugin start
apiVersion: v1
kind: Service
metadata:
  labels:
    app: spin
    cluster: spin-clouddriver
  name: spin-clouddriver-grpc
  namespace: spinnaker
spec:
  ports:
    - name: grpc
      port: 9091
      protocol: TCP
      targetPort: 9091
  selector:
    app: spin
    cluster: spin-clouddriver
---
# Create agent cluster role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: scale-agent-cluster-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - events
      - ingresses
      - ingresses/status
      - jobs
      - jobs/status
      - namespaces
      - namespaces/finalize
      - namespaces/status
      - pods
      - pods/log
      - pods/status
      - secrets
      - services
      - services/status
      - services/finalizers
    verbs:
      - create
      - get
      - list
      - update
      - watch
      - patch
      - delete
  - apiGroups:
      - batch
    resources:
      - jobs
      - jobs/status
    verbs:
      - create
      - get
      - list
      - update
      - watch
      - patch
      - delete
  - apiGroups:
      - apps
      - extensions
    resources:
      - daemonsets
      - daemonsets/status
      - deployments
      - deployments/finalizers
      - deployments/scale
      - deployments/status
      - replicasets
      - replicasets/finalizers
      - replicasets/scale
      - replicasets/status
      - statefulsets
      - statefulsets/finalizers
      - statefulsets/scale
      - statefulsets/status
    verbs:
      - create
      - get
      - list
      - update
      - watch
      - patch
      - delete
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - create
  - apiGroups:
      - spinnaker.armory.io
    resources:
      - "*"
      - spinnakerservices
    verbs:
      - create
      - get
      - list
      - update
      - watch
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - "*"
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    verbs:
      - "*"
  - apiGroups:
      - argoproj.io
    resources:
      - "*"
    verbs:
      - "*"
---
# Create agent service account
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: spinnaker
  name: scale-agent-sa
---
# Bind agent cluster role and service account
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: scale-agent-cluster-role-binding
subjects:
  - kind: ServiceAccount
    name: scale-agent-sa
    namespace: spinnaker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: scale-agent-cluster-role
---
# ConfigMap which contains the armory-agent.yaml file configuration which will be use by the agent
apiVersion: v1
kind: ConfigMap
metadata:
  name: armory-agent-config
  namespace: spinnaker
data:
  armory-agent.yml: |
    kubernetes:
      accounts:
        - name: agentAccount
          serviceAccount: true
    clouddriver:
      grpc: spin-clouddriver-grpc:9091
      insecure: true
---
# The actual deployment of the scale agent service
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: spin
    app.kubernetes.io/name: armory-agent
    app.kubernetes.io/part-of: spinnaker
    cluster: spin-armory-agent
  name: spin-armory-agent
  namespace: spinnaker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spin
      cluster: spin-armory-agent
  template:
    metadata:
      labels:
        app: spin
        app.kubernetes.io/name: armory-agent
        app.kubernetes.io/part-of: spinnaker
        cluster: spin-armory-agent
    spec:
      serviceAccount: scale-agent-sa
      containers:
        - image: armory/agent-k8s:1.0.44
          imagePullPolicy: IfNotPresent
          name: armory-agent
          ports:
            - name: health
              containerPort: 8082
              protocol: TCP
            - name: metrics
              containerPort: 8008
              protocol: TCP
          readinessProbe:
            httpGet:
              port: health
              path: /health
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /opt/armory/config
              name: volume-armory-agent-config
      restartPolicy: Always
      volumes:
        - name: volume-armory-agent-config
          configMap:
            name: armory-agent-config
